---
name: Code Quality Checks

on:
  push:
    branches: [main, development]
  pull_request:
    branches: [main, development]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.7', '3.8', '3.9']
    defaults:
      run:
        shell: bash
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.4
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        if: runner.os != 'Windows'  # Windows venv caching broken as of 05/19/21
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: Check format with black
        run: poetry run black --check roughness/ tests/
        continue-on-error: true
      - name: Check style with pylint
        run: poetry run pylint roughness/ tests/
        continue-on-error: true
      - name: Unit & Coverage test with pytest
        run: poetry run pytest
